{{- if (include "mariadb-galera.arbitrator.enabled" .) }}
{{- $fullName := include "common.names.fullname" . }}
{{- $releaseName := include "common.names.namespace" . }}
{{- $clusterDomain := .Values.clusterDomain }}
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ printf "%s-arbitrator" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: arbitrator
    {{- if .Values.arbitrator.labels }}
    {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.labels "context" $) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.arbitrator.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.arbitrator.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.arbitrator.annotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  serviceName: {{ include "mariadb-galera.arbitrator.service.nameOverride" . }}
  podManagementPolicy: {{ .Values.arbitrator.podManagementPolicy }}
  {{- if .Values.arbitrator.updateStrategy }}
  updateStrategy: {{- toYaml .Values.arbitrator.updateStrategy | nindent 4 }}
   {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: arbitrator
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: arbitrator
        {{- if .Values.arbitrator.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.podLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
      {{- if or (include "mariadb-galera.arbitrator.createConfigmap" .) .Values.arbitrator.podAnnotations }}
      annotations:
        {{- if (include "mariadb-galera.arbitrator.createConfigmap" .) }}
        checksum/configuration: {{ include (print $.Template.BasePath "/arbitrator/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.arbitrator.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      {{- include "mariadb-galera.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.arbitrator.schedulerName }}
      schedulerName: {{ .Values.arbitrator.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ template "mariadb-galera.serviceAccountName" . }}
      {{- if .Values.arbitrator.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.arbitrator.podAffinityPreset "component" "arbitrator" "topologyKey" .Values.topologyKey "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.arbitrator.nodeAffinityPreset.type "key" .Values.arbitrator.nodeAffinityPreset.key "values" .Values.arbitrator.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.arbitrator.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.arbitrator.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.arbitrator.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.arbitrator.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.arbitrator.priorityClassName }}
      priorityClassName: {{ .Values.arbitrator.priorityClassName }}
      {{- end }}
      {{- if .Values.arbitrator.runtimeClassName }}
      runtimeClassName: {{ .Values.arbitrator.runtimeClassName }}
      {{- end }}
      {{- if .Values.arbitrator.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.arbitrator.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{ if .Values.arbitrator.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.arbitrator.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        {{- if .Values.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
        - name: "ready-bootstrap-node"
          image: {{ include "mariadb-galera.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.arbitrator.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.arbitrator.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command:
            - bash
            - -c
            - |
              count=0
              rc=1
              while [ $count -lt 600 ]; do
                timeout 1 bash -c "cat < /dev/null > /dev/tcp/${MARIADB_GALERA_BOOTSTRAP_NODE_HOST}/${MARIADB_GALERA_PORT_NUMBER}"
                rc=$?
                [ $rc -eq 0 ] && break
                count=$((count + 1))
                sleep 1
              done
              exit $rc
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" (or .Values.image.debug .Values.diagnosticMode.enabled) | quote }}
            - name: MARIADB_GALERA_PORT_NUMBER
              value: {{ .Values.containerPorts.galera | quote }}
            - name: MARIADB_GALERA_BOOTSTRAP_NODE_HOST
              value: {{ printf "%s-0.%s-headless.%s.svc.%s" $fullName $fullName $releaseName $clusterDomain }}
            - name: MARIADB_ENABLE_TLS
              value: {{ ternary "yes" "no" .Values.tls.enabled | quote }}
            {{- if .Values.tls.enabled }}
            - name:  MARIADB_TLS_CERT_FILE
              value: {{ template "mariadb-galera.tlsCert" . }}
            - name:  MARIADB_TLS_KEY_FILE
              value: {{ template "mariadb-galera.tlsCertKey" . }}
            - name:  MARIADB_TLS_CA_FILE
              value: {{ template "mariadb-galera.tlsCACert" . }}
            {{- end }}
            {{- if .Values.arbitrator.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
            {{- if .Values.tls.enabled }}
            volumeMounts:
            - name: mariadb-galera-certificates
              mountPath: /bitnami/mariadb/certs/
              readOnly: true
            {{- end }}
      containers:
        - name: "mariadb-galera-arbitrator"
          image: {{ include "mariadb-galera.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.arbitrator.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.arbitrator.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.arbitrator.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.arbitrator.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.arbitrator.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" (or .Values.image.debug .Values.diagnosticMode.enabled) | quote }}
            - name: MARIADB_DEFAULT_PORT_NUMBER
              value: {{ .Values.containerPorts.mysql | quote }}
            - name: MARIADB_GALERA_CLUSTER_NAME
              value: {{ .Values.galera.name | quote }}
            {{- $initialCluster := list }}
            {{- range $e, $i := until (int .Values.replicaCount) }}
            {{- $initialCluster = append $initialCluster (printf "%s-%d.%s-headless.%s.svc.%s" $fullName $i $fullName $releaseName $clusterDomain) }}
            {{- end }}
            {{- $initialCluster = append $initialCluster (printf "%s-arbitrator-0.%s-arbitrator-headless.%s.svc.%s" $fullName $fullName $releaseName $clusterDomain) }}
            - name: MARIADB_GALERA_CLUSTER_ADDRESS
              value: {{ printf "gcomm://%s" (join "," $initialCluster) | quote }}
            {{- if .Values.arbitrator.extraFlags }}
            - name: MARIADB_EXTRA_FLAGS
              value: {{ .Values.arbitrator.extraFlags | quote }}
            {{- end }}
            - name: MARIADB_ENABLE_TLS
              value: {{ ternary "yes" "no" .Values.tls.enabled | quote }}
            {{- if .Values.tls.enabled }}
            - name:  MARIADB_TLS_CERT_FILE
              value: {{ template "mariadb-galera.tlsCert" . }}
            - name:  MARIADB_TLS_KEY_FILE
              value: {{ template "mariadb-galera.tlsCertKey" . }}
            - name:  MARIADB_TLS_CA_FILE
              value: {{ template "mariadb-galera.tlsCACert" . }}
            {{- end }}
            {{- if .Values.arbitrator.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if or .Values.arbitrator.extraEnvVarsCM .Values.arbitrator.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.arbitrator.extraEnvVarsCM }}
            - configMapRef:
                name: {{ tpl .Values.arbitrator.extraEnvVarsCM . | quote }}
            {{- end }}
            {{- if .Values.arbitrator.extraEnvVarsSecret }}
            - secretRef:
                name: {{ tpl .Values.arbitrator.extraEnvVarsSecret . | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: mysql
              containerPort: {{ .Values.containerPorts.mysql }}
            - name: galera
              containerPort: {{ .Values.containerPorts.galera }}
            - name: ist
              containerPort: {{ .Values.containerPorts.ist }}
            - name: sst
              containerPort: {{ .Values.containerPorts.sst }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.arbitrator.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.arbitrator.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.arbitrator.livenessProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: galera
          {{- end }}
          {{- if .Values.arbitrator.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.arbitrator.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.arbitrator.readinessProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: galera
          {{- end }}
          {{- if .Values.arbitrator.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.arbitrator.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.arbitrator.startupProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: galera
          {{- end }}
          {{- end }}
          {{- if .Values.arbitrator.resources }}
          resources: {{- toYaml .Values.arbitrator.resources | nindent 12 }}
          {{- end }}
          {{- if or .Values.arbitrator.configuration .Values.arbitrator.existingConfigmap .Values.arbitrator.extraVolumeMounts .Values.tls.enabled }}
          volumeMounts:
            - name: previous-boot
              mountPath: /opt/bitnami/mariadb/.bootstrap
            {{- if or .Values.arbitrator.configuration .Values.arbitrator.existingConfigmap }}
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/arbitrator.config
              subPath: arbitrator.config
            {{- end }}
            {{- if .Values.tls.enabled }}
            - name: mariadb-galera-certificates
              mountPath: /bitnami/mariadb/certs/
              readOnly: true
            {{- end }}
            {{- if .Values.arbitrator.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          {{- end }}
        {{- if .Values.arbitrator.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: previous-boot
          emptyDir: {}
        {{- if or .Values.arbitrator.configuration .Values.arbitrator.existingConfigmap }}
        - name: config
          configMap:
            name: {{ include "mariadb-galera.arbitrator.configmapName" . }}
        {{- end }}
        {{- if .Values.tls.enabled }}
        - name: mariadb-galera-certificates
          secret:
            secretName: {{ include "mariadb-galera.tlsSecretName" . }}
            defaultMode: 256
        {{- end }}
        {{- if .Values.arbitrator.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.arbitrator.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
